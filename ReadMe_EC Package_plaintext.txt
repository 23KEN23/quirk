Documentation for the eddy-current add-on to Quirk 
Ben Reinhardt 10/2/2013

This documentation adds on to the original quirk documentation which can be found at http://www.spacecraftresearch.com/flux/quirk/index.html

The methods and properties are IN ADDITION to those of the quirk superclasses

New Objects/Classes

magnet - magnets are bodies that generate magnetic fields. Magnets can be either a permanent magnet that is spinning/moving or a stationary (which needs to be changed) electromagnet with a sinusoidal current signal. 

properties:

	mag     
		% magnitude of the magnet's dipole moment - it is assumed to 		be aligned with the body Z axis of the magnet

	phase  
		% phase of the current in the magnet. Zero for a permanent 		magnet.
	freq  
		% frequency of the current in manget. Zero for a permanent 		magnet.


static methods: 

constructor:

function obj = magnet(mag, phase, freq, pos, att, varargin)
	% in addition to the usual properties that can be used for a body, 	magnets require a dipole magnitude, a phase and a frequency (for a 	permanent magnet the latter two should be zero)

%%%%%%%%%%%%

plate 
	%% plates are bodies that hold eddy currents and experience forces 	from magnets 

properties:
	sigma 
		%conductivity of the plate
        loops 
		%loops holds pointers to the loops that are in the plate
        xLoops 
		%number of current loops in yz plane per magnet
        yLoops  
		%number of current loops in xz plane per magnet
        zLoops 
		%number of current loops in xy plane per magnet
        xr  
		%radius of the iLoops generated perpendicular to the x axis
        yr  
		%radius of the iLoops generated perpendicular to the y axis
        zr 
		%radius of the iLoops generated perpendicular to the z axis
        loopPts 
		%number of points to evaluate forces around the edge of 		a current loop


dynamic methods:

constructor:
function obj = plate(pos,att, varargin) 
	% when constructing the plate, use the usual arguments for making a body
function plt = genLoops(plt,mag)
	% adds loops to the plate generated by the magnet

function plt = updateLoops(plt)
	% updateLoops updates all the loops on the plate to reflect the 	current state of all the magnets. it assumes that no magnets have left 	the system or have entered the system without the add function in 	magmBody

static methods:

function F = plateForce(plt,mag,t)
	% finds the force on the plate plt from the magnet mag in inertial 	coordinates at time t - right now the t doesn't do anything but is 	necessary to interact with the main QuIRK structure. 

%%%%%%%%%%%%%%

magmBody - magmbody are mBodies that keep track of which bodies are magnets and which are plates


properties:
	mags - 
		% keeps track of the magnets in the system
        plates 
		% keeps track of the plates in the system


methods:

constructor: 
function obj = magmBody(varargin) - 
	% the constructor can take the same arguments as the mBody class in 	addition to magnets and plates. It sets up current loops in the 	plates.

function obj = add(obj,varargin) - 
	% add works the same way that the mBody add function does except it 	accepts plates and magnets, keeping track of them and updating the 	current loops on the plates in the system

%%%%%%%%%%%%%%%%%%%%

iLoop - iLoops represent eddy current loops in a conductor. They are not necessary to interact with directly in order to use the toolbox

properties:

	plate
		%keeps track of which plate the loop is part of
        phase - 
		%phase of the loop
        radius - 
		%the physical radius of the current loop
        perpAxis - 
		%the axis (in body coordinates) perpendicular to the current 		%loop
        perpCoord - 
		%the position of the loop on the perpendicular axis 
        cur - 
		%the magnitude and direction of the current in the loop. 		Positive current corresponds to counterclockwise flow if you 		are looking down the perpendicular axis. In other words, if 		the right hand rule would point in the positive direction, the 		current is positive. 

        L 
		%inductance of loop
        R 
		%
        alpha
		 %the physical alpha property of the loop
        mag = {}; 
		%the loops should remember what magnet made it - not strictly 		necessary but useful for bookeeping
      
Methods:

constructor:  
function loop = iLoop(plate, mag, r, axis, coord)
	%the loop constructor requires the plate the loop is part of, the 	magnet creating the loop, the radius of the loop, the axis the loop 	will be perpendicular to and the position of the loop on that axis

function loop = loopUpdate(loop)
	%loopUpdate refreshes the loop properties, taking into account any 	changes in the plate or magnet

static methods:

function [ F ] = loopForce(loop, mag, loop_pts)
	%loopForce finds the force on the given loop by the given magnet. 	loop_pts are the number of points around the circumference of the loop 	where force is calculated and then summed - more points gives finer 	measurements, but takes more time.



